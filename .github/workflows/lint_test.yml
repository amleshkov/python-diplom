name: "Lint and run tests"
on:
  push:
    branches:
     - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.13" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: install poetry
        uses: Gr1N/setup-poetry@v8
      - name: Configure Poetry virtual environment
        run: poetry config virtualenvs.in-project true
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-
      - name: Install dependencies
        run: poetry install --with test
      - name: Lint with ruff
        run: |
          poetry run ruff check --output-format=github .
        continue-on-error: true
      - name: Run tests
        env:
          DB_ENGINE: "django.db.backends.sqlite3"
          DB_NAME: ":memory:"
        run: |
          cd orders
          pwd
          poetry run coverage run -m pytest -v -s
      - name: Generate coverage report
        env:
          COVERAGE_FILE: "orders/.coverage"
        run: |
          poetry run coverage report -m
